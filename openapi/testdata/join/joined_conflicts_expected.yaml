openapi: 3.1.0
info:
  title: Main API
  version: 1.0.0
  description: Main API for joining tests
tags:
  - name: users
    description: User operations
paths:
  /users:
    get:
      operationId: getUsers
      summary: Get users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      servers:
        - url: https://main-api.example.com
          description: Main server
      security:
        - ApiKeyAuth: []
    servers:
      - url: https://main-api.example.com
        description: Main server
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
      servers:
        - url: https://main-api.example.com
          description: Main server
      security:
        - ApiKeyAuth: []
    servers:
      - url: https://main-api.example.com
        description: Main server
  /orders:
    get:
      summary: Get orders with different server requirements
      servers:
        - url: https://different-api.example.com
          description: Different server that conflicts
      security:
        - ApiKeyAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    servers:
      - url: https://different-api.example.com
        description: Different server that conflicts
  /admin:
    get:
      summary: Admin endpoint with different security requirements
      security:
        - BearerAuth: []
        - OAuth2:
            - read
            - write
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
webhooks:
  userCreated:
    post:
      summary: User created webhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    limitParam:
      name: limit
      in: query
      description: max records to return
      schema:
        type: integer
        format: int32
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Read access
            write: Write access
